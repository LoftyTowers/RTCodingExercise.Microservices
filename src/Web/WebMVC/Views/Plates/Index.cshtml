@model RTCodingExercise.Microservices.Models.PlateDataViewModel

@{
    // Pagination state
    int currentPage = ViewBag.CurrentPage is int cp ? cp : 1;
    int totalPages = ViewBag.TotalPages is int tp ? tp : 1;
    int pageSize = ViewBag.PageSize is int size ? size : 20;

    int startPage = Math.Max(1, currentPage - 2);
    int endPage = Math.Min(totalPages, startPage + 4);
    if (endPage - startPage < 4) startPage = Math.Max(1, endPage - 4);

    // Sort state
    WebMVC.Enums.SortField currentField = ViewBag.CurrentSortField ?? WebMVC.Enums.SortField.None;
    WebMVC.Enums.SortDirection currentDirection = ViewBag.CurrentSortDirection ?? WebMVC.Enums.SortDirection.Ascending;

    Func<WebMVC.Enums.SortField, WebMVC.Enums.SortDirection> nextDirection = field =>
        field == currentField && currentDirection == WebMVC.Enums.SortDirection.Ascending
            ? WebMVC.Enums.SortDirection.Descending
            : WebMVC.Enums.SortDirection.Ascending;
}

<!-- Add Bootstrap Icons if not already included -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
@if (Model != null)
{
    <div class="alert alert-success mt-3">
        <strong>Total Revenue:</strong> @Model.TotalRevenue.ToString("C")<br />
        <strong>Average Profit Margin:</strong> @Model.AverageProfitMargin.ToString("P1")
    </div>
}

<h3 class="mt-5 mb-3">Add Plate</h3>
<hr />
<form asp-action="AddPlate" method="post" class="row g-3 align-items-end">
    <div class="col-md-4">
        <label class="form-label" for="plateInput">Plate Number:</label>
        <input id="plateInput" type="text" name="Registration" class="form-control" required />
    </div>
    <div class="col-md-4">
        <label class="form-label" for="priceInput">Purchase Price (Â£):</label>
        <input id="priceInput" type="number" name="PurchasePrice" class="form-control" step="0.01" required />
    </div>
    <div class="col-md-4">
        <button type="submit" class="btn btn-primary">Add Plate</button>
    </div>
</form>
<h4 class="mt-4 mb-2">Search Plates</h4>
@if (TempData["FilterError"] != null)
{
    <div class="alert alert-warning" role="alert">
        @TempData["FilterError"]
    </div>
}
<form method="get" asp-action="Filter" class="row g-3 align-items-end mb-4">
    <div class="col-md-5">
        <label for="query" class="form-label">Enter plate, letters or numbers</label>
        <input type="text" id="query" name="query" class="form-control" placeholder="e.g. AB1" value="@ViewBag.Query" />
    </div>

    <div class="col-md-2">
        <div class="form-check mt-4">
            <input class="form-check-input" type="checkbox" name="onlyAvailable" id="onlyAvailable" value="true" @(ViewBag.OnlyAvailable == true ? "checked" : "") />
            <label class="form-check-label" for="onlyAvailable">Only show available</label>
        </div>
    </div>

    <div class="col-md-2">
        <label class="form-label d-block invisible">Search</label>
        <button type="submit" class="btn btn-primary">Search</button>
    </div>

    <div class="col-md-3">
        <label class="form-label d-block invisible">Reset</label>
        <a class="btn btn-outline-secondary" href="@Url.Action("Index", "Plates")">Reset</a>
    </div>
</form>
<hr />

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}
<h2 class="mt-4 mb-3">Available Plates</h2>

<table class="table table-striped table-bordered w-auto">
    <thead>
        <tr>
            <th>#</th>
            <th>
                <a asp-action="Index"
                   asp-route-field="Registration"
                   asp-route-direction="@nextDirection(WebMVC.Enums.SortField.Registration)"
                   asp-route-page="@currentPage"
                   asp-route-pageSize="@pageSize">
                    Registration
                    @if (currentField == WebMVC.Enums.SortField.Registration)
                    {
                        <i class="bi @(currentDirection == WebMVC.Enums.SortDirection.Ascending ? "bi-caret-up-fill" : "bi-caret-down-fill") ms-1"></i>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-field="PurchasePrice"
                   asp-route-direction="@nextDirection(WebMVC.Enums.SortField.PurchasePrice)"
                   asp-route-page="@currentPage"
                   asp-route-pageSize="@pageSize">
                    Purchase Price
                    @if (currentField == WebMVC.Enums.SortField.PurchasePrice)
                    {
                        <i class="bi @(currentDirection == WebMVC.Enums.SortDirection.Ascending ? "bi-caret-up-fill" : "bi-caret-down-fill") ms-1"></i>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-field="SalePrice"
                   asp-route-direction="@nextDirection(WebMVC.Enums.SortField.SalePrice)"
                   asp-route-page="@currentPage"
                   asp-route-pageSize="@pageSize">
                    Sale Price
                    @if (currentField == WebMVC.Enums.SortField.SalePrice)
                    {
                        <i class="bi @(currentDirection == WebMVC.Enums.SortDirection.Ascending ? "bi-caret-up-fill" : "bi-caret-down-fill") ms-1"></i>
                    }
                </a>
            </th>
            <th>Status</th>
            <th>UpdateStatus</th>
        </tr>
    </thead>
    <tbody>
        @{
            int rowNumber = ((currentPage - 1) * pageSize) + 1;
        }
        @foreach (var plate in Model.Plates)
        {
            <tr>
                <td>@rowNumber</td>
                <td>@plate.Registration</td>
                <td>@plate.PurchasePrice.ToString("C")</td>
                <td>@plate.SalePrice.ToString("C")</td>
                <td>@plate.Status</td>
                <td>
                    <form asp-action="UpdateStatus" asp-controller="Plates" method="post" class="d-flex align-items-center">
                        <input type="hidden" name="Id" value="@plate.Id" />

                        <select class="form-select me-2" name="Status" onchange="handleStatusChange(this, '@plate.Id')">
                            <option value="10" selected="@((int)plate.Status == 10)">Available</option>
                            <option value="20" selected="@((int)plate.Status == 20)">Reserved</option>
                            <option value="30" selected="@((int)plate.Status == 30)">Sold</option>
                        </select>
                    </form>
                </td>
            </tr>
            rowNumber++;
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize, field = currentField, direction = currentDirection })">&laquo;&laquo;</a>
        </li>
        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, pageSize, field = currentField, direction = currentDirection })">&laquo;</a>
        </li>

        @for (int i = startPage; i <= endPage; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize, field = currentField, direction = currentDirection })">@i</a>
            </li>
        }

        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, pageSize, field = currentField, direction = currentDirection })">&raquo;</a>
        </li>
        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = totalPages, pageSize, field = currentField, direction = currentDirection })">&raquo;&raquo;</a>
        </li>
    </ul>
</nav>

<script>
    function handleStatusChange(select, plateId) {
        const selected = parseInt(select.value);
        if (selected === 30) { // "Sold"
            const promoCode = prompt("Enter promo code if you have one:");
            if (promoCode !== null) {
                const form = document.createElement("form");
                form.method = "POST";
                form.action = "/Sales/SellPlate";

                const idInput = document.createElement("input");
                idInput.type = "hidden";
                idInput.name = "id";
                idInput.value = plateId;
                form.appendChild(idInput);

                const promoInput = document.createElement("input");
                promoInput.type = "hidden";
                promoInput.name = "promoCode";
                promoInput.value = promoCode;
                form.appendChild(promoInput);

                document.body.appendChild(form);
                form.submit();
            } else {
                // If cancelled, revert to original value
                select.value = ""; // Or set it back to original status if needed
            }
        } else {
            // Submit parent form for "Available" or "Reserved"
            select.form.submit();
        }
    }
</script>